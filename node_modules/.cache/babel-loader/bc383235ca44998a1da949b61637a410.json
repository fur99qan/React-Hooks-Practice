{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfur9\\\\Desktop\\\\react-hooks-course\\\\src\\\\UseMemo\\\\MemoTutorial.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemoTutorial() {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [toggle, setToggle] = useState(false);\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/comments\").then(response => {\n      setData(response.data);\n    });\n  }, []);\n\n  const findLongestName = comments => {\n    if (!comments) return null;\n    let longestName = \"\";\n\n    for (let i = 0; i < comments.length; i++) {\n      let currentName = comments[i].name;\n\n      if (currentName.length > longestName.length) {\n        longestName = currentName;\n      }\n    }\n\n    console.log(\"THIS WAS COMPUTED\");\n    return longestName;\n  };\n\n  const getLongestName = useMemo(() => findLongestName(data), [toggle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", getLongestName, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setToggle(!toggle);\n      },\n      children: [\" \", \"Toggle\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), toggle && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" toggle \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MemoTutorial, \"MhmkBOq6lVZMLH77MmKTnHTbs+I=\");\n\n_c = MemoTutorial;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoTutorial\");","map":{"version":3,"sources":["C:/Users/mfur9/Desktop/react-hooks-course/src/UseMemo/MemoTutorial.js"],"names":["axios","useEffect","useState","useMemo","MemoTutorial","data","setData","toggle","setToggle","get","then","response","findLongestName","comments","longestName","i","length","currentName","name","console","log","getLongestName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,OAA9B,QAA6C,OAA7C;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CACFS,GADH,CACO,+CADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBL,MAAAA,OAAO,CAACK,QAAQ,CAACN,IAAV,CAAP;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMO,eAAe,GAAIC,QAAD,IAAc;AACpC,QAAI,CAACA,QAAL,EAAe,OAAO,IAAP;AAEf,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,UAAIE,WAAW,GAAGJ,QAAQ,CAACE,CAAD,CAAR,CAAYG,IAA9B;;AACA,UAAID,WAAW,CAACD,MAAZ,GAAqBF,WAAW,CAACE,MAArC,EAA6C;AAC3CF,QAAAA,WAAW,GAAGG,WAAd;AACD;AACF;;AAEDE,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,WAAON,WAAP;AACD,GAdD;;AAgBA,QAAMO,cAAc,GAAGlB,OAAO,CAAC,MAAMS,eAAe,CAACP,IAAD,CAAtB,EAA8B,CAACE,MAAD,CAA9B,CAA9B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,sBAAOc,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AACE,MAAA,OAAO,EAAE,MAAM;AACbb,QAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,OAHH;AAAA,iBAKG,GALH;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAWGA,MAAM,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA7CuBH,Y;;KAAAA,Y","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState, useMemo } from \"react\";\r\n\r\nexport default function MemoTutorial() {\r\n  const [data, setData] = useState(null);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/comments\")\r\n      .then((response) => {\r\n        setData(response.data);\r\n      });\r\n  }, []);\r\n\r\n  const findLongestName = (comments) => {\r\n    if (!comments) return null;\r\n\r\n    let longestName = \"\";\r\n    for (let i = 0; i < comments.length; i++) {\r\n      let currentName = comments[i].name;\r\n      if (currentName.length > longestName.length) {\r\n        longestName = currentName;\r\n      }\r\n    }\r\n\r\n    console.log(\"THIS WAS COMPUTED\");\r\n\r\n    return longestName;\r\n  };\r\n\r\n  const getLongestName = useMemo(() => findLongestName(data), [toggle]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div> {getLongestName} </div>\r\n\r\n      <button\r\n        onClick={() => {\r\n          setToggle(!toggle);\r\n        }}\r\n      >\r\n        {\" \"}\r\n        Toggle\r\n      </button>\r\n      {toggle && <h1> toggle </h1>}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}