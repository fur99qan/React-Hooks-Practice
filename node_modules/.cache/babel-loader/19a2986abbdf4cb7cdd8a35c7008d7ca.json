{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mfur9\\\\Desktop\\\\react-hooks-course\\\\src\\\\UseReducer\\\\ReducerTutorial.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        count: state.count + 1,\n        showText: state.showText\n      };\n\n    case \"DECREMENT\":\n      return {\n        count: state.count - 1,\n        showText: state.showText\n      };\n\n    case \"toggleShowText\":\n      return {\n        count: state.count,\n        showText: !state.showText\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst ReducerTutorial = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    count: 0,\n    showText: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: state.count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: \"INCREMENT\"\n        });\n        dispatch({\n          type: \"toggleShowText\"\n        });\n      },\n      children: \"Click Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), state.showText && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is a text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReducerTutorial, \"EN7y60VqQT+pcwBV0SEz3ZLyUag=\");\n\n_c = ReducerTutorial;\nexport default ReducerTutorial; // const [state, dispatch] = useReducer(reducer, { initial states in object form });\n//define reducer function with 2 arguments:(state, action)\n\nvar _c;\n\n$RefreshReg$(_c, \"ReducerTutorial\");","map":{"version":3,"sources":["C:/Users/mfur9/Desktop/react-hooks-course/src/UseReducer/ReducerTutorial.js"],"names":["React","useReducer","reducer","state","action","type","count","showText","ReducerTutorial","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAAEC,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc,CAAvB;AAA0BC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI;AAA1C,OAAP;;AACF,SAAK,WAAL;AACE,aAAO;AAAED,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc,CAAvB;AAA0BC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI;AAA1C,OAAP;;AACF,SAAK,gBAAL;AACE,aAAO;AAAED,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAf;AAAsBC,QAAAA,QAAQ,EAAE,CAACJ,KAAK,CAACI;AAAvC,OAAP;;AACF;AACE,aAAOJ,KAAP;AARJ;AAUD,CAXD;;AAaA,MAAMK,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBR,UAAU,CAACC,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAAV,CAApC;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAKJ,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,OAAO,EAAE,MAAM;AACbG,QAAAA,QAAQ,CAAC;AAAEJ,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACAI,QAAAA,QAAQ,CAAC;AAAEJ,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAWGF,KAAK,CAACI,QAAN,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlBD;;GAAMC,e;;KAAAA,e;AAoBN,eAAeA,eAAf,C,CAEA;AACA","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return { count: state.count + 1, showText: state.showText };\r\n    case \"DECREMENT\":\r\n      return { count: state.count - 1, showText: state.showText }\r\n    case \"toggleShowText\":\r\n      return { count: state.count, showText: !state.showText };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst ReducerTutorial = () => {\r\n  const [state, dispatch] = useReducer(reducer, { count: 0, showText: true });\r\n\r\n  return (\r\n    <div>\r\n      <h1>{state.count}</h1>\r\n      <button\r\n        onClick={() => {\r\n          dispatch({ type: \"INCREMENT\" });\r\n          dispatch({ type: \"toggleShowText\" });\r\n        }}\r\n      >\r\n        Click Here\r\n      </button>\r\n\r\n      {state.showText && <p>This is a text</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReducerTutorial;\r\n\r\n// const [state, dispatch] = useReducer(reducer, { initial states in object form });\r\n//define reducer function with 2 arguments:(state, action)"]},"metadata":{},"sourceType":"module"}